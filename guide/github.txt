Git 이란?
Git(깃)은 컴퓨터 파일의 변경사항을 추적하고 팀 간에 해당 파일 작업을 조율하기 위한 대표적인 버전 관리 시스템(VCS)

1. git 세팅시 처음 한번 수행되어야 하는 세팅

개행 문자(Newline) 설정
- window
  경로> git config -global core.autocrlf true

사용자 정보
커밋(버전 생성)을 위한 정보 등록
  경로> git config --global user.name '이름' 
  경로> git config --global user.email '메일'

구성확인
  경로> git config --global --list

2. git 실행
    경로> git init : 현재 프로젝트에서 변경사항 추적(버전 관리)를 시작
          ( index, css, img 등 변경사항을 로컬(내 컴퓨터)에서 발생 )
          - master 라는 브랜치 발생(프로젝트 시작)   
          - 파일을 빨간색으로 나타냄
    경로> git add 변경파일명 : 변경사항을 추적할 파일이름 지정
          - 특정파일 하나 올릴 시 : git add 특정파일명
          - 전체 올릴 시 : git add .
          - 파일을 초록색으로 변경
          - 버전으로 만들 준비(변경사항 추적 중...)
    경로> git commit -m '변경내용이나 시작부분의 내용을 삽입'
          - 메시지(-m) 함께 버전을 생성 (-옵션: 플래그라고 함)
          - 파일이 회색으로 나타남
          - 만약 파일이 새롭게 생성이 된다면 git commit -m 'main.js scroll 기능 변경'
    (원격으로 변경)
    경로> git remote add origin 깃 저장소 주소 : origin이라는 별칭으로 원격 저장소를 연결.  
    경로> git push origin 브랜치이름(master 또는 main) : origin이란 별칭의 원격 저장소로 버전 내용 전송 

   git reset --hard HEAD : 지금 커밋 상태로 완전히 되돌리고 변경사항은 버려라 뜻 
   git push origin main --force :main 브랜치를 강제로 덮어쓰기

3. branch.
    경로> git branch : 로켈에 만들어져 있는 브랜치 확인
    경로> git branch -a : 원격 저장소에 만들어져 있는 브랜치 확인
    경로> git branch 만들어야할 브랜치 이름 : git branch signin
    경로> git checkout 이동할 브랜치 이름 : git checkout signin

git 캐시 삭제
git credential-cache exit
force